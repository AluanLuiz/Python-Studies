 Informações úteis:

.PACK() "Ajusta o layout do elemento"

    SIDE: Define a direção na qual o elemento será exibido, (tk.TOP, tk.BOTTOM, tk.LEFT, tk.RIGHT);
    ANCHOR: Especifica onde o elemento deve ser ancorado dentro do espaço disponível , ('n', 's', 'e', 'w', 'ne', 'nw', 'se', 'sw', 'center'). 
            respectivamente (North, South, East, West, Northeast, Northwest, Southeast, Southwest, Center);
    FILL: Indica como o elemento deve se expandir para preencher o espaço disponível, ('none', 'x', 'y', 'both');
    EXPAND: Um valor booleano que indica se o elemento deve expandir para ocupar qualquer espaço extra disponível;
    IPADX e IPADY: Adiciona espaço interno ao redor do elemento no eixo x ou y;
    PADX e PADY: Adiciona espaço externo ao redor do elemento no eixo x ou y;
    BEFORE e AFTER: Controla a posição do elemento em relação a outros elementos já exibidos;
    IN_ : Especifica o elementro mestre em que o elemento deve ser exibido.

---------------------------------------

Comandos SQLite: "desconsidere as <>"

    < CREATE DATABASE nome_do_banco; > - "Cria um Banco de Dados";
    < USE nome_do_banco; > - "Define qual BD irá usar";
    < CREATE TABLE nome_da_tabela (
                id INTEGER PRIMARY KEY,
                coluna1 TIPO1,
                coluna2 TIPO2,
                ...); > - "Cria uma tabela";
    INSERT INTO nome_da_tabela (coluna1, coluna2, ...) VALUES (valor1, valor2, ...); - "Inserir Dados a uma tabela";
    SELECT * FROM nome_da_tabela WHERE condicao; - "Consulta uma tabela";
    < UPDATE nome_da_tabela
    SET coluna1 = valor1, coluna2 = valor2
    WHERE condicao; > - "Atualiza os dados da tabela";
    < DELETE FROM nome_da_tabela WHERE condicao; > - "Exluir dados";